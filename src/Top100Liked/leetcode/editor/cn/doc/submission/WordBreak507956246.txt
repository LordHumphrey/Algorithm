    class Solution {
        public boolean wordBreak(String s, List<String> wordDict) {

            int len = s.length();
            boolean[] dp = new boolean[len + 1];
            dp[0] = true;
            HashSet<String> set = new HashSet<>(wordDict);
            for (int i = 0; i <= len; i++) {
                for (int j = 0; j < i; j++) {
                    String substring = s.substring(j, i);
                    if (set.contains(substring) && dp[j]) {
                        dp[i] = true;
                    }
                }
            }
            return dp[len];
        }
    }

//runtime:9 ms
//memory:44 MB
