    class Solution {
        public int longestCommonSubsequence(String text1, String text2) {
            int len1 = text1.length(), len2 = text2.length();
            int[][] dp = new int[len1 + 1][len2 + 1];
            for (int i = 0; i < len1; i++) {
                dp[i][0] = 0;
            }
            for (int i = 0; i <= len2; i++) {
                dp[0][i] = 0;
            }
            for (int i = 1; i <= len1; i++) {
                for (int i1 = 1; i1 <= len2; i1++) {
                    if (text1.charAt(i - 1) == text2.charAt(i1 - 1)) {
                        dp[i][i1] = dp[i - 1][i1 - 1] + 1;
                    } else {
                        dp[i][i1] = Math.max(dp[i][i1 - 1], dp[i - 1][i1]);
                    }
                }
            }
            return dp[len1][len2];
        }
    }

//runtime:18 ms
//memory:50 MB
