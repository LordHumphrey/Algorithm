    class Solution {
        public boolean searchMatrix(int[][] matrix, int target) {
            int row = matrix.length, col = matrix[0].length, mid = 0, left = 0, right = row - 1;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (target <= matrix[mid][col - 1] && target >= matrix[mid][0]) {
                    break;
                } else if (target > matrix[row - 1][0]) {
                    left = mid + 1;
                } else if (target < matrix[row - 1][0]) {
                    right = mid - 1;
                }
            }
            row = mid;
            left = 0;
            right = col - 1;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (matrix[row][mid] == target) {
                    return true;
                } else if (target > matrix[row][mid]) {
                    left = mid + 1;
                } else if (target < matrix[row][mid]) {
                    right = mid - 1;
                }
            }
            return false;
        }
    }

//runtime:N/A
//memory:N/A
//total_testcases:133
//total_correct:16
//input_formatted:[[1],[3]]
3
//expected_output:true
//code_output:
//runtime_error:
//last_testcase:[[1],[3]] 3
