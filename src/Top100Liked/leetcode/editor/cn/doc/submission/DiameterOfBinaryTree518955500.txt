    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     *     int val;
     *     TreeNode left;
     *     TreeNode right;
     *     TreeNode() {}
     *     TreeNode(int val) { this.val = val; }
     *     TreeNode(int val, TreeNode left, TreeNode right) {
     *         this.val = val;
     *         this.left = left;
     *         this.right = right;
     *     }
     * }
     */
    class Solution {
        int ans = 0;

        public int diameterOfBinaryTree(TreeNode root) {
            diameter(root);
            return ans - 1;
        }

        private int diameter(TreeNode root) {
            if (null == root) {
                return 0;
            }
            int left = diameter(root.left);
            int right = diameter(root.right);
            ans = Math.max(left + right + 1, ans);
            return Math.max(left, right) + 1;
        }
    }

//runtime:1 ms
//memory:43.6 MB
