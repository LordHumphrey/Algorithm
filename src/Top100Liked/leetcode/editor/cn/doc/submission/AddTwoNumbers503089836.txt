/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            ListNode res = new ListNode(-1), cur = res;
            int carry = 0;
            while (null != l1 || null != l2) {
                int x = null == l1 ? 0 : l1.val, y = null == l2 ? 0 : l2.val, sum = x + y + carry;
                carry = sum / 10;
                sum = sum % 10;
                cur.next = new ListNode(sum);
                cur = cur.next;
                if (null != l1) {
                    l1 = l1.next;
                }
                if (null != l2) {
                    l2 = l2.next;
                }
            }
            if (1 == carry) {
                cur.next = new ListNode(carry);
            }
            return res.next;
        }
}
//runtime:1 ms
//memory:43.6 MB
