class Solution {
    public int findKthLargest(int[] nums, int k) {
        int len = nums.length;
        PriorityQueue<Integer> minHeap = new PriorityQueue<>(len, (a, b) -> b - a);
        for (int num : nums) {
            minHeap.offer(num);
        }
        for (int i = 0; i < k - 1; i++) {

            minHeap.remove();
        }
        return minHeap.poll();
    }
}
//runtime:58 ms
//memory:57.5 MB
