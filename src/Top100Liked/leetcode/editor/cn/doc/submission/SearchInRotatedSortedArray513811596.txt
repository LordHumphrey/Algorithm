    class Solution {
        public int search(int[] nums, int target) {
            int min = findMin(nums);
            if (target > nums[nums.length - 1]) {
                return findTarget(nums, 0, min, target);
            }
            return findTarget(nums, min - 1, nums.length - 1, target);
        }

        private int findTarget(int[] nums, int left, int right, int target) {
            int mid = 0;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (nums[mid] > target) {
                    right = mid - 1;
                } else if (nums[mid] < target) {
                    left = mid + 1;
                } else if (nums[mid] == target) {
                    return mid;
                }
            }
            return -1;
        }

        public int findMin(int[] nums) {
            int left = 0, right = nums.length - 1, mid = 0;
            while (left <= right) {
                mid = left + (right - left) / 2;
                if (nums[mid] > nums[right]) {
                    left = mid + 1;
                } else if (nums[mid] < nums[right]) {
                    right = mid;
                } else {
                    break;
                }
            }
            return right;
        }
    }

//runtime_error:java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 1
  at line 14, Solution.findTarget
  at line 7, Solution.search
  at line 56, __DriverSolution__.__helper__
  at line 89, __Driver__.main
//last_testcase:[1] 0
