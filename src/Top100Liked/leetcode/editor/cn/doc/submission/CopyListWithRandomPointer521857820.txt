    class Solution {
        public Node copyRandomList(Node head) {
            Node cur = new Node(0);
            cur = head;
            HashMap<Node, Node> map = new HashMap<>();
            while (cur != null) {
                Node newNode = new Node(cur.val);
                map.put(cur, newNode);
                cur = cur.next;
            }
            //            cur = head;
            //            while (cur != null) {
            //                map.get(cur).next = map.get(cur.next);
            //                map.get(cur).random = map.get(cur.random);
            //                cur = cur.next;
            //            }
            for (Node node : map.keySet()) {
                map.get(node).next = map.get(node.next);
                map.get(node).random = map.get(node.random);
            }
            return map.get(head);
        }
    }

//runtime:0 ms
//memory:43.5 MB
